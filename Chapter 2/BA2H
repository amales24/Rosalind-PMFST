#!/usr/bin/env python3

def HammingDistance(p,q):
    
    n = len(p)
    counter = 0
    for i in range(0,n):
        if p[i] != q[i]:
            counter += 1
    return counter


def DistancePatternText(Pattern, Text):

    k = len(Pattern)
    minimum = HammingDistance(Pattern, Text[0:k])
    for i in range(1, len(Text) - k + 1):
        if(HammingDistance(Pattern, Text[i:i+k]) < minimum):
            minimum = HammingDistance(Pattern, Text[i:i+k])

    return minimum


def DistanceBetweenPatternAndStrings(Pattern, Dna):

    distance = 0
    for i in range(0,len(Dna)):
        distance += DistancePatternText(Pattern, Dna[i])

    return distance


with open("rosalind_ba2h.txt") as file:
    lines = file.readlines()

Pattern = lines[0].strip('\n')
Dna = lines[1].strip('\n').split(' ')

print(DistanceBetweenPatternAndStrings(Pattern, Dna))
