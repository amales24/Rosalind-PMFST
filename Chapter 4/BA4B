#!/usr/bin/env python3

def Complement(p):
    if p == 'A':
        return 'T'
    if p == 'T':
        return 'A'
    if p == 'G':
        return 'C'
    if p == 'C':
        return 'G'

def ReverseComplement(Pattern):
    
    n = len(Pattern)
    rev_comp = ""
    
    for i in range(0, n):
        rev_comp = Complement(Pattern[i]) + rev_comp
                              
    return rev_comp


def SymbolToNumber(symbol):

    if symbol == "A":
        return 0
    elif symbol == "C":
        return 1
    elif symbol == "G":
        return 2
    elif symbol == "T":
        return 3


def PatternToNumber(Pattern):

    if Pattern == "":
        return 0

    symbol = Pattern[len(Pattern)-1]
    prefix = Pattern[0:len(Pattern)-1]
    return 4*PatternToNumber(prefix) + SymbolToNumber(symbol)


def DNAtoAminoAcid(Pattern):

    Amino = 'KNKNTTTTRSRSIIMIQHQHPPPPRRRRLLLLEDEDAAAAGGGGVVVV*Y*YSSSS*CWCLFLF'
    out = ""

    for i in range (0, len(Pattern) - 3 + 1, 3):

        amino_index = PatternToNumber(Pattern[i:i+3])
        amino_acid = Amino[amino_index]
        if amino_acid != '*':
            out += amino_acid

    return out

#__________________________________________________________________

def DNAencodingPeptide(Text,Peptide):
    
    k = 3*len(Peptide) #duljina substringa kojeg prevodimo u peptid
    out = ""
    
    for i in range (0, len(Text) - k + 1):
        
        substr_translation = DNAtoAminoAcid(Text[i:i+k])
        rev_comp_translation = DNAtoAminoAcid(ReverseComplement(Text[i:i+k]))
        
        if((substr_translation == Peptide) | (rev_comp_translation == Peptide)):
            out += Text[i:i+k] + "\n"

    return out



with open("rosalind_ba4b.txt") as file:
    lines = file.readlines()
print(DNAencodingPeptide(lines[0].strip("\n"),lines[1].strip("\n")))

